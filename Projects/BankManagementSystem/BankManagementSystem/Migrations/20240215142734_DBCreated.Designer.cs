// <auto-generated />
using System;
using BankManagementSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankManagementSystem.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20240215142734_DBCreated")]
    partial class DBCreated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankManagementSystem.Models.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("172a9611-9f14-4fb5-bc9d-76b50545ed22"),
                            Address = "Guliston",
                            Name = "Eskhata"
                        });
                });

            modelBuilder.Entity("BankManagementSystem.Models.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Branchs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef39d9c7-83ef-4858-b75d-a34461f20a2f"),
                            Address = "Station",
                            BankId = new Guid("172a9611-9f14-4fb5-bc9d-76b50545ed22")
                        },
                        new
                        {
                            Id = new Guid("41751cac-fd58-4f12-ae0c-a40bccf8f55a"),
                            Address = "Guliston, Glavnoy",
                            BankId = new Guid("172a9611-9f14-4fb5-bc9d-76b50545ed22")
                        });
                });

            modelBuilder.Entity("BankManagementSystem.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("BankManagementSystem.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Birthday")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Nabijon");

                    b.Property<string>("FullName2")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("CONCAT(FirstName, ' ', LastName)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BankManagementSystem.Models.Client", b =>
                {
                    b.HasBaseType("BankManagementSystem.Models.Person");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasIndex("BranchId");

                    b.HasDiscriminator().HasValue("Client");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38b086da-8316-4a65-a7da-d31db12f5730"),
                            Birthday = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            BranchId = new Guid("ef39d9c7-83ef-4858-b75d-a34461f20a2f"),
                            FirstName = "Nabijon",
                            LastName = "Azamov",
                            State = 0
                        },
                        new
                        {
                            Id = new Guid("3e7ff9f5-7935-4cb0-ade5-61974423a47b"),
                            Birthday = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            BranchId = new Guid("41751cac-fd58-4f12-ae0c-a40bccf8f55a"),
                            FirstName = "Rahmatillo",
                            LastName = "Azamov",
                            State = 0
                        });
                });

            modelBuilder.Entity("BankManagementSystem.Models.Worker", b =>
                {
                    b.HasBaseType("BankManagementSystem.Models.Person");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("BranchId");

                    b.HasDiscriminator().HasValue("Worker");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3df470c0-15aa-4591-8639-f15b4e8a1ca4"),
                            Birthday = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            BranchId = new Guid("ef39d9c7-83ef-4858-b75d-a34461f20a2f"),
                            FirstName = "Yoqubjon",
                            LastName = "Ahmedov"
                        },
                        new
                        {
                            Id = new Guid("edc183f0-2f35-4f48-8053-8fd53c9f021c"),
                            Birthday = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            BranchId = new Guid("41751cac-fd58-4f12-ae0c-a40bccf8f55a"),
                            FirstName = "Abdurasul",
                            LastName = "Abdurahmonov"
                        });
                });

            modelBuilder.Entity("BankManagementSystem.Models.Branch", b =>
                {
                    b.HasOne("BankManagementSystem.Models.Bank", "Bank")
                        .WithMany("Branchs")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("BankManagementSystem.Models.Department", b =>
                {
                    b.HasOne("BankManagementSystem.Models.Bank", "Bank")
                        .WithMany("Departments")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("BankManagementSystem.Models.Client", b =>
                {
                    b.HasOne("BankManagementSystem.Models.Branch", "Branch")
                        .WithMany("Clients")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("BankManagementSystem.Models.Worker", b =>
                {
                    b.HasOne("BankManagementSystem.Models.Branch", "Branch")
                        .WithMany("Workers")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("BankManagementSystem.Models.Bank", b =>
                {
                    b.Navigation("Branchs");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("BankManagementSystem.Models.Branch", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
